# Generated by Django 5.1.7 on 2025-05-01 12:47

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import student_management_system.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmailVerificationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('code', models.CharField(blank=True, max_length=6, null=True)),
            ],
            options={
                'verbose_name': 'Email Verification Code',
                'verbose_name_plural': 'Email Verification Codes',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('STAFF', 'Staff'), ('STUDENT', 'Student')], max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', student_management_system.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('course_id', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('credits', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('department_name', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='student_management_system.department')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_number', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('first_name', models.CharField(default='FirstName', max_length=255)),
                ('middle_Name', models.CharField(default='MiddleName', max_length=255)),
                ('last_name', models.CharField(default='LastName', max_length=255)),
                ('place_of_birth', models.CharField(default='Unknown', max_length=255)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('address', models.CharField(default='Unknown', max_length=255)),
                ('phone', models.CharField(blank=True, default='', max_length=20)),
                ('year_level', models.CharField(blank=True, choices=[('1', '1st Year'), ('2', '2nd Year'), ('3', '3rd Year'), ('4', '4th Year')], max_length=50)),
                ('f137', models.FileField(blank=True, null=True, upload_to='documents/f137/')),
                ('psa_photocopy', models.FileField(blank=True, null=True, upload_to='documents/psa/')),
                ('shs_diploma_photocopy', models.FileField(blank=True, null=True, upload_to='documents/shs_diploma/')),
                ('good_moral', models.FileField(blank=True, null=True, upload_to='documents/good_moral/')),
                ('honorable_dismissal', models.FileField(blank=True, null=True, upload_to='documents/honorable_dismissal/')),
                ('original_tor', models.FileField(blank=True, null=True, upload_to='documents/original_tor/')),
                ('pictures', models.ImageField(blank=True, null=True, upload_to='pictures/')),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('student_type', models.CharField(blank=True, choices=[('new', 'New Student'), ('old', 'Old Student'), ('transferee', 'Transferee')], max_length=50)),
                ('school_name', models.CharField(blank=True, max_length=255)),
                ('student_status', models.CharField(blank=True, choices=[('Enrolled', 'Enrolled'), ('Pending', 'Pending'), ('Dropped', 'Dropped'), ('Graduated', 'Graduated')], max_length=50)),
                ('verification_token', models.CharField(blank=True, max_length=255, null=True)),
                ('verification_token_created', models.DateTimeField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('citizenship', models.CharField(default='Unknown', max_length=50)),
                ('status', models.CharField(blank=True, choices=[('single', 'Single'), ('married', 'Married')], max_length=50)),
                ('father_name', models.CharField(default='Unknown', max_length=255)),
                ('mother_name', models.CharField(default='Unknown', max_length=255)),
                ('guardian_contact_number', models.CharField(default='Unknown', max_length=20)),
                ('academic_year', models.CharField(blank=True, max_length=50, null=True)),
                ('semester', models.CharField(blank=True, choices=[('1st', '1st Semester'), ('2nd', '2nd Semester')], max_length=50)),
                ('elementary_name_year_graduated', models.CharField(default='Unknown', max_length=255)),
                ('junior_high_name_year_graduated', models.CharField(default='Unknown', max_length=255)),
                ('senior_high_name_year_graduated', models.CharField(default='Unknown', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students', to='student_management_system.course')),
                ('department_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='student_management_system.department')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_id', models.CharField(max_length=255, unique=True)),
                ('subject_name', models.CharField(default='DEFAULT_NAME', max_length=255)),
                ('subject_code', models.CharField(default='CODE', max_length=10)),
                ('credits', models.IntegerField(default=0)),
                ('department_name', models.CharField(default='General Studies', max_length=255)),
                ('semester_offered', models.CharField(default='1st', max_length=10)),
                ('professor_name', models.CharField(max_length=255)),
                ('year_level', models.IntegerField(default=1)),
                ('number_of_hours', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('Currently Taking', 'Currently Taking'), ('Drop', 'Drop'), ('Done', 'Done')], default='Currently Taking', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_system.course')),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_value', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('semester', models.CharField(default='1st', max_length=10)),
                ('academic_year', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='student_management_system.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='student_management_system.subject')),
            ],
            options={
                'verbose_name': 'Grade',
                'verbose_name_plural': 'Grades',
                'unique_together': {('student', 'subject', 'semester', 'academic_year')},
            },
        ),
    ]
